{"version":3,"file":"static/js/247.9be21a04.chunk.js","mappings":"8LAsCA,UAlCa,WACX,OAA8BA,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KAEQC,GAAYC,EAAAA,EAAAA,MAAZD,QAMR,OALAE,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAgBH,GAASI,MAAK,SAAAC,GAC5BN,EAAWM,EAAEC,KACd,GACF,GAAE,CAACN,KAEF,wBACGF,EAAQS,OAAS,EACdT,EAAQU,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,KAAMC,EAAb,EAAaA,aAAcC,EAA3B,EAA2BA,UAA3B,OACV,2BACE,gBACEC,IACEF,EAAY,yCAC0BA,GAD1B,+CAIdG,IAAI,QACJC,QAAQ,OACRC,MAAO,IACPC,OAAQ,OAEV,uBAAIP,KACJ,yBAAG,eAAaE,OAbTH,EADC,IAiBZ,kCAGT,C,+LClCDS,EAAAA,EAAAA,SAAAA,QAAyB,gCACzB,IAAMC,EAAU,mCAEHC,EAAW,mCAAG,oGACFF,EAAAA,EAAAA,IAAA,qCAAwCC,IADtC,cACnBE,EADmB,yBAElBA,EAASC,MAFS,2CAAH,qDAKXC,EAAe,mCAAG,WAAMd,GAAN,uFACNS,EAAAA,EAAAA,IAAA,gBACZT,EADY,oBACEU,EADF,oBADM,cACvBE,EADuB,yBAItBA,EAASC,MAJa,2CAAH,sDAMfnB,EAAe,mCAAG,WAAMM,GAAN,uFACNS,EAAAA,EAAAA,IAAA,gBACZT,EADY,4BACUU,EADV,oBADM,cACvBE,EADuB,yBAItBA,EAASC,MAJa,2CAAH,sDAMfE,EAAU,mCAAG,WAAMf,GAAN,uFACDS,EAAAA,EAAAA,IAAA,gBACZT,EADY,4BACUU,EADV,2BADC,cAClBE,EADkB,yBAIjBA,EAASC,MAJQ,2CAAH,sDAMVG,EAAY,mCAAG,WAAMC,GAAN,uFACHR,EAAAA,EAAAA,IAAA,+BACGC,EADH,iCACmCO,EADnC,gCADG,cACpBL,EADoB,yBAInBA,EAASC,MAJU,2CAAH,qD","sources":["components/Cast/Cast.jsx","service/Api.js"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { getMovieCredits } from 'service/Api';\nimport { useParams } from 'react-router-dom';\n\nconst Cast = () => {\n  const [credits, setCredits] = useState([]);\n\n  const { movieId } = useParams();\n  useEffect(() => {\n    getMovieCredits(movieId).then(r => {\n      setCredits(r.cast);\n    });\n  }, [movieId]);\n  return (\n    <ul>\n      {credits.length > 0\n        ? credits.map(({ id, name, profile_path, character }) => (\n            <li key={id}>\n              <img\n                src={\n                  profile_path\n                    ? `https://image.tmdb.org/t/p/w200${profile_path}`\n                    : `http://www.suryalaya.org/images/no_image.jpg`\n                }\n                alt=\"actor\"\n                loading=\"lazy\"\n                width={120}\n                height={180}\n              />\n              <p>{name}</p>\n              <p> Character: {character}</p>\n            </li>\n          ))\n        : \"Sorry, there isn't any info :(\"}\n    </ul>\n  );\n};\n\nexport default Cast;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '30b92e886ebe536d021caf51a30c3282';\n\nexport const getTrending = async () => {\n  const response = await axios.get(`trending/movie/day?api_key=${API_KEY}`);\n  return response.data;\n};\n\nexport const getMovieDetails = async id => {\n  const response = await axios.get(\n    `movie/${id}?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\nexport const getMovieCredits = async id => {\n  const response = await axios.get(\n    `movie/${id}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\nexport const getReviews = async id => {\n  const response = await axios.get(\n    `movie/${id}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n  return response.data;\n};\nexport const searchMovies = async query => {\n  const response = await axios.get(\n    `search/movie?api_key=${API_KEY}&language=en-US&query=${query}&page=1&include_adult=false`\n  );\n  return response.data;\n};\n"],"names":["useState","credits","setCredits","movieId","useParams","useEffect","getMovieCredits","then","r","cast","length","map","id","name","profile_path","character","src","alt","loading","width","height","axios","API_KEY","getTrending","response","data","getMovieDetails","getReviews","searchMovies","query"],"sourceRoot":""}